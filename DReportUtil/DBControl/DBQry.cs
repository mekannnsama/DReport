using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


namespace DReportUtil.DBControl
{
    public class DBQry
    {
        public static string rpt_24(string begin, string end)
        {
            string qry = string.Format(@"SELECT * FROM ((SELECT DISTINCT(AA.TRANS_ID), AA.REVERSE_TRANS_ID AS ESREG_GUILGEE, HH.PRODUCT_NAME AS BAGTS, EE.CALL_TYPE_NAME , GG.CHANNEL_NAME AS SUWAG, AA.REGDATE AS SUNGASN_UDUR, AA.CARD_NUMBER AS CARD, BB.SUBSCRIBER_FNAME AS NER, DECODE(BB.SUBSCRIBER_STATUS, 0,'INACTIVE', 1,'ACTIVE', 'UNKNOWN') STATUS, SS.SUBTYPE_NAME AS TURUL, AA.STARTDATE AS EXLEX_XUGATSAA, AA.ENDDATE AS DUUSAX_XUGATSAA, AA.AMOUNT AS TOTAL_DUN, MT_FEE,AA.AMOUNT - MT_FEE AS MUNGUN_DUN , DD.BRANCH_NAME AS SALBAR, AA.USER_NAME AS SUNGALT_AJILTAN, AA.DESCR AS TAILBAR, BB.OPERATION_ID AS UUSGESEN_AJILTAN , AA.TOTAL_POINT AS UP_NEMEGDSEN, AA.SPEND_POINT AS UP_HASAGDSAN FROM (
        SELECT ORGACC.*,P.TOTAL_POINT,P.SPEND_POINT FROM (
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND PRODUCT_ID IN  (SELECT PRODUCT_ID FROM PRODUCT_CATALOG WHERE ISREPORT =1) AND AMOUNT !=0 AND CARD_NUMBER NOT IN ('8097603536532789', '2130152015', '2130139200') AND SUBSTR(CARD_NUMBER, 0,3) !='100' AND CALL_TYPE NOT IN (101,5,40)
        UNION ALL
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND PRODUCT_ID IS NULL  AND AMOUNT !=0 AND CARD_NUMBER NOT IN ('8097603536532789', '2130152015', '2130139200') AND SUBSTR(CARD_NUMBER, 0,3) !='100' AND CALL_TYPE=41
        UNION
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND DESCR LIKE '%FLASH%'
) ORGACC 
LEFT JOIN UPOINT_TRANSACTION P ON P.TRANS_ID = ORGACC.TRANS_ID
WHERE ORGACC.TRANS_ID NOT IN (SELECT TO_NUMBER(CDR_TRANS_ID) FROM D_ACCOUNT_CDR WHERE CDR_REGDATE >='{0}'  AND CDR_REGDATE <='{1}' AND CDR_TRANS_ID IS NOT NULL) AND RESULT = 0
) AA
LEFT JOIN T_DISH_CUSTOM BB ON AA.CARD_NUMBER = BB.CARD_NO
LEFT JOIN SYSTEM_BRANCH_LOCATION DD ON AA.BRANCH = DD.BRANCH_ID AND AA.CHANNEL_TYPE IN (9,8)
LEFT JOIN TYPE_CHANNEL GG ON AA.CHANNEL_TYPE = GG.CHANNEL_ID
LEFT JOIN PRODUCT_CATALOG HH ON AA.PRODUCT_ID = HH.PRODUCT_ID
LEFT JOIN T_DISH_SUBSCRIBERTYPE SS ON BB.SUBSCRIBER_TYPE = SS.SUBTYPE_ID
LEFT JOIN TYPE_CALL_TYPE EE ON EE.CALL_TYPE_ID = AA.CALL_TYPE
WHERE EE.CALL_TYPE_ID NOT IN (13,14,15,16,17))
UNION ALL
(SELECT DISTINCT(AA.TRANS_ID), AA.REVERSE_TRANS_ID AS ESREG_GUILGEE, HH.PRODUCT_NAME AS BAGTS, EE.CALL_TYPE_NAME , GG.CHANNEL_NAME AS SUWAG, AA.REGDATE AS SUNGASN_UDUR, AA.CARD_NUMBER AS CARD, BB.SUBSCRIBER_FNAME AS NER, DECODE(BB.SUBSCRIBER_STATUS, 0,'INACTIVE', 1,'ACTIVE', 'UNKNOWN') STATUS, SS.SUBTYPE_NAME AS TURUL, AA.STARTDATE AS EXLEX_XUGATSAA, AA.ENDDATE AS DUUSAX_XUGATSAA, AA.AMOUNT AS TOTAL_DUN, MT_FEE,AA.AMOUNT - MT_FEE AS MUNGUN_DUN, DD.BRANCH_NAME AS SALBAR, AA.USER_NAME AS SUNGALT_AJILTAN, AA.DESCR AS TAILBAR, BB.OPERATION_ID AS UUSGESEN_AJILTAN , AA.TOTAL_POINT AS UP_NEMEGDSEN, AA.SPEND_POINT AS UP_HASAGDSAN FROM (
        SELECT ORGACC.*,P.TOTAL_POINT,P.SPEND_POINT FROM (
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND PRODUCT_ID IN  (SELECT PRODUCT_ID FROM PRODUCT_CATALOG WHERE ISREPORT =1) AND AMOUNT !=0 AND CARD_NUMBER NOT IN ('8097603536532789', '2130152015', '2130139200') AND SUBSTR(CARD_NUMBER, 0,3) !='100' AND CALL_TYPE NOT IN (101,5,40)
        UNION ALL
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND PRODUCT_ID IS NULL  AND AMOUNT !=0 AND CARD_NUMBER NOT IN ('8097603536532789', '2130152015', '2130139200') AND SUBSTR(CARD_NUMBER, 0,3) !='100' AND CALL_TYPE=41
        UNION
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND DESCR LIKE '%FLASH%'
) ORGACC 
LEFT JOIN UPOINT_TRANSACTION P ON P.TRANS_ID = ORGACC.TRANS_ID
WHERE ORGACC.TRANS_ID NOT IN (SELECT TO_NUMBER(CDR_TRANS_ID) FROM D_ACCOUNT_CDR WHERE CDR_REGDATE >='{0}'  AND CDR_REGDATE <='{1}' AND CDR_TRANS_ID IS NOT NULL) AND ORGACC.TRANS_ID NOT IN (SELECT TRANS_ID FROM UPOINT_TRANSACTION) AND ORGACC.TRANS_ID NOT IN (SELECT TRANS_ID FROM UNINEGJ_REPORT WHERE TRANS_ID IS NOT NULL)
) AA
LEFT JOIN T_DISH_CUSTOM BB ON AA.CARD_NUMBER = BB.CARD_NO
LEFT JOIN SYSTEM_BRANCH_LOCATION DD ON AA.BRANCH = DD.BRANCH_ID AND AA.CHANNEL_TYPE IN (9,8)
LEFT JOIN TYPE_CHANNEL GG ON AA.CHANNEL_TYPE = GG.CHANNEL_ID
LEFT JOIN PRODUCT_CATALOG HH ON AA.PRODUCT_ID = HH.PRODUCT_ID
LEFT JOIN T_DISH_SUBSCRIBERTYPE SS ON BB.SUBSCRIBER_TYPE = SS.SUBTYPE_ID
LEFT JOIN TYPE_CALL_TYPE EE ON EE.CALL_TYPE_ID = AA.CALL_TYPE
WHERE EE.CALL_TYPE_ID NOT IN (13,14,15,16,17)) 
UNION ALL
(SELECT DISTINCT(AA.TRANS_ID), AA.REVERSE_TRANS_ID AS ESREG_GUILGEE, HH.PRODUCT_NAME AS BAGTS, EE.CALL_TYPE_NAME , GG.CHANNEL_NAME AS SUWAG, AA.REGDATE AS SUNGASN_UDUR, AA.CARD_NUMBER AS CARD, BB.SUBSCRIBER_FNAME AS NER, DECODE(BB.SUBSCRIBER_STATUS, 0,'INACTIVE', 1,'ACTIVE', 'UNKNOWN') STATUS, SS.SUBTYPE_NAME AS TURUL, AA.STARTDATE AS EXLEX_XUGATSAA, AA.ENDDATE AS DUUSAX_XUGATSAA,AA.AMOUNT AS TOTAL_DUN, MT_FEE,AA.AMOUNT - MT_FEE AS MUNGUN_DUN, DD.BRANCH_NAME AS SALBAR, AA.USER_NAME AS SUNGALT_AJILTAN, AA.DESCR AS TAILBAR, BB.OPERATION_ID AS UUSGESEN_AJILTAN , AA.TOTAL_POINT AS UP_NEMEGDSEN, AA.SPEND_POINT AS UP_HASAGDSAN FROM (
        SELECT ORGACC.*,P.TOTAL_POINT,P.SPEND_POINT FROM (
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND PRODUCT_ID IN  (SELECT PRODUCT_ID FROM PRODUCT_CATALOG WHERE ISREPORT =1) AND AMOUNT !=0 AND CARD_NUMBER NOT IN ('8097603536532789', '2130152015', '2130139200') AND SUBSTR(CARD_NUMBER, 0,3) !='100' AND CALL_TYPE NOT IN (101,5,40)
        UNION ALL
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND PRODUCT_ID IS NULL  AND AMOUNT !=0 AND CARD_NUMBER NOT IN ('8097603536532789', '2130152015', '2130139200') AND SUBSTR(CARD_NUMBER, 0,3) !='100' AND CALL_TYPE=41
        UNION
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND DESCR LIKE '%FLASH%'
) ORGACC 
LEFT JOIN UPOINT_TRANSACTION P ON P.TRANS_ID = ORGACC.TRANS_ID
WHERE ORGACC.TRANS_ID NOT IN (SELECT TO_NUMBER(CDR_TRANS_ID) FROM D_ACCOUNT_CDR WHERE CDR_REGDATE >='{0}'  AND CDR_REGDATE <='{1}' AND CDR_TRANS_ID IS NOT NULL) AND ORGACC.TRANS_ID IN (SELECT DISTINCT(TRANS_ID) FROM UPOINT_TRANSACTION WHERE  RESULT != 0)
) AA
LEFT JOIN T_DISH_CUSTOM BB ON AA.CARD_NUMBER = BB.CARD_NO
LEFT JOIN SYSTEM_BRANCH_LOCATION DD ON AA.BRANCH = DD.BRANCH_ID AND AA.CHANNEL_TYPE IN (9,8)
LEFT JOIN TYPE_CHANNEL GG ON AA.CHANNEL_TYPE = GG.CHANNEL_ID
LEFT JOIN PRODUCT_CATALOG HH ON AA.PRODUCT_ID = HH.PRODUCT_ID
LEFT JOIN T_DISH_SUBSCRIBERTYPE SS ON BB.SUBSCRIBER_TYPE = SS.SUBTYPE_ID
LEFT JOIN TYPE_CALL_TYPE EE ON EE.CALL_TYPE_ID = AA.CALL_TYPE
WHERE EE.CALL_TYPE_ID NOT IN (13,14,15,16,17))) 
WHERE TRANS_ID NOT IN (SELECT TRANS_ID FROM FLASH_LEASING_CDR) AND TRANS_ID NOT IN (SELECT TRANS_ID FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND PROMOTION_ID = 161)", begin, end);
            return qry;
        }
        public static string rpt_25(string begin, string end)
        {
            string qry = string.Format(@"SELECT CC.REVERSE_TRANS_ID, GG.CHANNEL_NAME, AA.REGDATE, SUBSTR((AA.REGTIME+1000000),2,6) AS REGTIME, FF.NAME, AA.CARD_NO, BB.SUBSCRIBER_FNAME, 
DECODE(BB.SUBSCRIBER_STATUS, 0,'INACTIVE', 1,'ACTIVE', 'UNKNOWN') STATUS, AA.BEFORE_REMAINS, CC.AMOUNT, AA.AFTER_REMAINS,CASE WHEN CHANNEL_TYPE IN (8,9) THEN DD.BRANCH_NAME END AS BRANCH_NAME, AA.USERNAME, CC.DESCR,TOTAL_POINT AS UP_NEMEGDSEN,SPEND_POINT AS UP_HASAGDSAN FROM 
(SELECT REGDATE, REGTIME, CARD_NO, BEFORE_REMAINS, AFTER_REMAINS, COUNTER_VALUE, USERNAME, TRANS_ID, BRANCH, CHANNEL_NAME, COUNTER_ID FROM D_ACCOUNT_RECHARGE 
WHERE COUNTER_ID = 1001 AND REGDATE >='{0}' AND REGDATE <='{1}' AND CARD_NO NOT IN ('8097603536532789', '2130152015') AND SUBSTR(CARD_NO, 0,3) !='100' ORDER BY SEQ_NO ASC ) AA 
LEFT JOIN T_DISH_CUSTOM BB ON AA.CARD_NO = BB.CARD_NO LEFT JOIN ACCOUNT_TRANSACTION CC ON AA.TRANS_ID = CC.TRANS_ID 
LEFT JOIN system_branch_location DD ON AA.BRANCH = DD.BRANCH_ID
LEFT JOIN D_COUNTERS FF ON AA.COUNTER_ID = FF.COUNTER_ID
LEFT JOIN TYPE_CHANNEL GG ON AA.CHANNEL_NAME = GG.CHANNEL_ID
LEFT JOIN (SELECT * FROM UPOINT_TRANSACTION WHERE LENGTH(BILL_NUMBER)='24') UU ON UU.TRANS_ID = AA.TRANS_ID", begin, end);
            return qry;
        }
        public static string rpt_28(string begin, string end)
        {
            string qry = string.Format(@"SELECT AA.REVERSE_TRANS_ID, HH.PRODUCT_NAME, GG.CHANNEL_NAME, AA.REGDATE, AA.CARD_NUMBER, BB.SUBSCRIBER_FNAME, DECODE(BB.SUBSCRIBER_STATUS, 0,'INACTIVE', 1,'ACTIVE', 'UNKNOWN') STATUS, SS.SUBTYPE_NAME, AA.STARTDATE, AA.ENDDATE, AA.AMOUNT, DD.BRANCH_NAME, AA.USER_NAME, AA.DESCR, BB.OPERATION_ID FROM (SELECT * FROM ACCOUNT_TRANSACTION 
        WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND CALL_TYPE =9 AND CHANNEL_TYPE=9 AND AMOUNT=0 AND CARD_NUMBER NOT IN ('8097603536532789') AND DESCR LIKE 'Үнэгүй%' ORDER BY TRANS_ID ASC) AA
        LEFT JOIN T_DISH_CUSTOM BB ON AA.CARD_NUMBER = BB.CARD_NO
        LEFT JOIN SYSTEM_BRANCH_LOCATION DD ON AA.BRANCH = DD.BRANCH_ID AND AA.CHANNEL_TYPE IN (9,8)
        LEFT JOIN TYPE_CHANNEL GG ON AA.CHANNEL_TYPE = GG.CHANNEL_ID
        LEFT JOIN PRODUCT_CATALOG HH ON AA.PRODUCT_ID = HH.PRODUCT_ID
        LEFT JOIN T_DISH_SUBSCRIBERTYPE SS ON BB.SUBSCRIBER_TYPE = SS.SUBTYPE_ID", begin, end);
            return qry;
        }
        public static string rpt_26(string begin, string end)
        {
            string qry = string.Format(@"SELECT CC.REVERSE_TRANS_ID, NN.PRODUCT_NAME, FF.CHANNEL_NAME, AA.CDR_REGDATE, VV.NAME, AA.CARD_NO, BB.SUBSCRIBER_FNAME, DECODE(BB.SUBSCRIBER_STATUS, 0,'INACTIVE', 1,'ACTIVE', 'UNKNOWN') STATUS, CC.STARTDATE, CC.ENDDATE, AA.CDR_BEFORE_BALANCE, CC.AMOUNT AS TOTAL_AMOUNT,
             MT_FEE,CC.AMOUNT - MT_FEE AS CDR_USED_AMOUNT, AA.CDR_AFTER_BALANCE, CT.CALL_TYPE_NAME, DD.BRANCH_NAME, CC.USER_NAME, CC.DESCR, 
            BB.OPERATION_ID FROM 
            (SELECT * FROM D_ACCOUNT_CDR WHERE CDR_REGDATE >= {0} AND CDR_REGDATE <= {1} AND CDR_USED_COUNTERS=1001 AND SUBSTR(CARD_NO, 0,3) !='100' AND CARD_NO NOT IN ('8097603536532789', '2130152015', '2130123096') ORDER BY CDR_SEQ ASC ) AA
            LEFT JOIN T_DISH_CUSTOM BB ON AA.CARD_NO = BB.CARD_NO
            LEFT JOIN ACCOUNT_TRANSACTION CC ON AA.CDR_TRANS_ID = CC.TRANS_ID
            LEFT JOIN system_branch_location DD ON DD.BRANCH_ID = CC.BRANCH
            LEFT JOIN TYPE_CHANNEL FF ON AA.CDR_CHANNEL_TYPE = FF.CHANNEL_ID
            LEFT JOIN TYPE_CALL_TYPE CT ON CC.CALL_TYPE = CT.CALL_TYPE_ID
            LEFT JOIN D_COUNTERS VV ON AA.CDR_USED_COUNTERS = VV.COUNTER_ID
            LEFT JOIN PRODUCT_CATALOG NN ON CC.PRODUCT_ID = NN.PRODUCT_ID 
            WHERE CC.CALL_TYPE !=10", begin, end);
            return qry;
        }

        public static string rpt_5(string begin, string end)
        {
            string qry = string.Format(@"select installer, a.CARD_NO, amount, DECODE(a.amount, 500,'Илүү багц', 1000,'Үлэмж багц') Bagtsiin_ner, c.name, a.INSERT_DATE, b.CREATE_DATE from installer_promotion_tbl_new a
            left join t_dish_custom b on a.CARD_NO = b.CARD_NO
            left join w_item_bundle c on b.bundle_id = c.id
            where a.INSERT_DATE>=to_date('{0}','yyyymmddhh24miss')
            and a.INSERT_DATE<=to_date('{1}','yyyymmddhh24miss') and
            b.CREATE_DATE>=to_date('20191130000000','yyyymmddhh24miss')
            and b.CREATE_DATE<=to_date('20191231235959','yyyymmddhh24miss')
            and a.type=1 and a.INSTALLER in ('installer_munkhtur','installer_baterdene_n','installer_sergei')", begin, end);
            return qry;
        }

        public static string rpt_27(string begin, string end)
        {
            string qry = string.Format(@"SELECT CC.REVERSE_TRANS_ID, CC.TRANS_ID, NN.PRODUCT_NAME, FF.CHANNEL_NAME, AA.CDR_REGDATE, VV.NAME, AA.CARD_NO, BB.SUBSCRIBER_FNAME, 
DECODE(BB.SUBSCRIBER_STATUS, 0,'INACTIVE', 1,'ACTIVE', 'UNKNOWN') STATUS, CC.STARTDATE, CC.ENDDATE, AA.CDR_BEFORE_BALANCE, AA.CDR_USED_AMOUNT, AA.CDR_AFTER_BALANCE, CT.CALL_TYPE_NAME, DD.BRANCH_NAME, 
CC.USER_NAME, CC.DESCR, OO.NAME_ENG, OO.NAME_MON FROM 
(SELECT * FROM D_ACCOUNT_CDR WHERE CDR_REGDATE >= {0} AND CDR_REGDATE <= {1} AND CDR_USED_COUNTERS IS NOT NULL AND SUBSTR(CARD_NO, 0,3) !='100' AND CARD_NO NOT IN ('8097603536532789', '2130152015', '2130123096') ORDER BY CDR_SEQ ASC ) AA
LEFT JOIN T_DISH_CUSTOM BB ON AA.CARD_NO = BB.CARD_NO
LEFT JOIN ACCOUNT_TRANSACTION CC ON AA.CDR_TRANS_ID = CC.TRANS_ID
LEFT JOIN SYSTEM_BRANCH_LOCATION DD ON CC.BRANCH = DD.BRANCH_ID
LEFT JOIN TYPE_CHANNEL FF ON CC.CHANNEL_TYPE = FF.CHANNEL_ID
LEFT JOIN TYPE_CALL_TYPE CT ON CC.CALL_TYPE = CT.CALL_TYPE_ID
LEFT JOIN D_COUNTERS VV ON AA.CDR_USED_COUNTERS = VV.COUNTER_ID
LEFT JOIN PRODUCT_CATALOG NN ON CC.PRODUCT_ID = NN.PRODUCT_ID 
LEFT JOIN TV_CONTENT OO ON CC.CONTENT_ID = OO.ID WHERE CC.CALL_TYPE =10", begin, end);
            return qry;
        }

        public static string rpt_1(string begin, string end)
        {
            string qry = string.Format(@"SELECT NAME AS PACKAGE_NAME,X.CARD_NO,GEREENII_HUGATSAA,PRICE ,LIZING_AMOUNT  , DISCOUNT ,  
    DECODE (DISCOUNT , 60000, 12000, 12900,31900) AS TERMINAL_AMOUNT ,DECODE (DISCOUNT , 60000, 10400, 12900,10500) AS PACKAGE_AMOUNT , INSTALLER_FEE ,CREATE_DATE , BRANCH_NAME, USER_NAME  FROM (
SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, C.BRANCH_NAME, B.USER_NAME, D.NAME, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE, 180000 AS LIZING_AMOUNT, 60000 AS DISCOUNT, PRICE, 0 AS INSTALLER_FEE  FROM T_DISH_CUSTOM A
LEFT JOIN SYSTEM_YES_USER_TBL B ON B.USER_NAME = A. OPERATION_ID
LEFT JOIN SYSTEM_BRANCH_LOCATION C ON C.BRANCH_ID = B.BRANCH_ID
LEFT JOIN W_ITEM_BUNDLE D ON D.ID = A.BUNDLE_ID
WHERE BUNDLE_ID IN (SELECT ID FROM W_ITEM_BUNDLE WHERE ID IN (3156, 3154, 3153, 3151, 3150, 3157, 3141, 3142, 3144, 3145, 3147, 3148, 3136, 3135, 3133, 3132, 3130, 3129) AND TYPE = 16) AND CREATE_DATE >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND CREATE_DATE <= TO_DATE('{1}', 'YYYYMMDDHH24MISS') 
UNION ALL (
SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, C.BRANCH_NAME, B.USER_NAME, D.NAME, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE, 180000 AS LIZING_AMOUNT, 10000 AS DISCOUNT, PRICE, 0 AS INSTALLER_FEE   FROM T_DISH_CUSTOM A
LEFT JOIN SYSTEM_YES_USER_TBL B ON B.USER_NAME = A. OPERATION_ID
LEFT JOIN SYSTEM_BRANCH_LOCATION C ON C.BRANCH_ID = B.BRANCH_ID
LEFT JOIN W_ITEM_BUNDLE D ON D.ID = A.BUNDLE_ID
WHERE BUNDLE_ID IN (SELECT ID FROM W_ITEM_BUNDLE WHERE ID IN (3149, 3155, 3131, 3152, 3146, 3134, 3143, 3128, 3140) AND TYPE = 16) AND CREATE_DATE >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND CREATE_DATE <= TO_DATE('{1}', 'YYYYMMDDHH24MISS')
)
UNION ALL (
SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, C.BRANCH_NAME, B.USER_NAME, D.NAME, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE, 120000 AS LIZING_AMOUNT, 50000 AS DISCOUNT, PRICE, 0 AS INSTALLER_FEE   FROM T_DISH_CUSTOM A
LEFT JOIN SYSTEM_YES_USER_TBL B ON B.USER_NAME = A. OPERATION_ID
LEFT JOIN SYSTEM_BRANCH_LOCATION C ON C.BRANCH_ID = B.BRANCH_ID
LEFT JOIN W_ITEM_BUNDLE D ON D.ID = A.BUNDLE_ID
WHERE BUNDLE_ID IN (SELECT ID FROM W_ITEM_BUNDLE WHERE ID IN (3137) AND TYPE = 16) AND CREATE_DATE >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND CREATE_DATE <= TO_DATE('{1}', 'YYYYMMDDHH24MISS')
)
UNION ALL (
SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, C.BRANCH_NAME, B.USER_NAME, D.NAME, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE, 120000 AS LIZING_AMOUNT, 85000 AS DISCOUNT, PRICE , 0 AS INSTALLER_FEE  FROM T_DISH_CUSTOM A
LEFT JOIN SYSTEM_YES_USER_TBL B ON B.USER_NAME = A. OPERATION_ID
LEFT JOIN SYSTEM_BRANCH_LOCATION C ON C.BRANCH_ID = B.BRANCH_ID
LEFT JOIN W_ITEM_BUNDLE D ON D.ID = A.BUNDLE_ID
WHERE BUNDLE_ID IN (SELECT ID FROM W_ITEM_BUNDLE WHERE ID IN (3138, 3139) AND TYPE = 16) AND CREATE_DATE >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND CREATE_DATE <= TO_DATE('{1}', 'YYYYMMDDHH24MISS')
)
UNION ALL (
SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, C.BRANCH_NAME, B.USER_NAME, D.NAME, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE, 180000 AS LIZING_AMOUNT, 50000 AS DISCOUNT, PRICE, 0 AS INSTALLER_FEE   FROM T_DISH_CUSTOM A
LEFT JOIN SYSTEM_YES_USER_TBL B ON B.USER_NAME = A. OPERATION_ID
LEFT JOIN SYSTEM_BRANCH_LOCATION C ON C.BRANCH_ID = B.BRANCH_ID
LEFT JOIN W_ITEM_BUNDLE D ON D.ID = A.BUNDLE_ID
WHERE BUNDLE_ID IN (SELECT ID FROM W_ITEM_BUNDLE WHERE ID IN (3171, 3175, 3179) AND TYPE = 16) AND CREATE_DATE >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND CREATE_DATE <= TO_DATE('{1}', 'YYYYMMDDHH24MISS')
)
UNION ALL (
SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, C.BRANCH_NAME, B.USER_NAME, D.NAME, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE, 240000 AS LIZING_AMOUNT, 60000 AS DISCOUNT, PRICE , 0 AS INSTALLER_FEE  FROM T_DISH_CUSTOM A
LEFT JOIN SYSTEM_YES_USER_TBL B ON B.USER_NAME = A. OPERATION_ID
LEFT JOIN SYSTEM_BRANCH_LOCATION C ON C.BRANCH_ID = B.BRANCH_ID
LEFT JOIN W_ITEM_BUNDLE D ON D.ID = A.BUNDLE_ID
WHERE BUNDLE_ID IN (SELECT ID FROM W_ITEM_BUNDLE WHERE ID IN (3172, 3173, 3176, 3177, 3180, 3181 ) AND TYPE = 16) AND CREATE_DATE >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND CREATE_DATE <= TO_DATE('{1}', 'YYYYMMDDHH24MISS')
)
UNION ALL (
SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, C.BRANCH_NAME, B.USER_NAME, D.NAME, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE, 180000 AS LIZING_AMOUNT, 50000 AS DISCOUNT, PRICE, 0 AS INSTALLER_FEE   FROM T_DISH_CUSTOM A
LEFT JOIN SYSTEM_YES_USER_TBL B ON B.USER_NAME = A. OPERATION_ID
LEFT JOIN SYSTEM_BRANCH_LOCATION C ON C.BRANCH_ID = B.BRANCH_ID
LEFT JOIN W_ITEM_BUNDLE D ON D.ID = A.BUNDLE_ID
WHERE BUNDLE_ID IN (SELECT ID FROM W_ITEM_BUNDLE WHERE ID IN (3174, 3178, 3182 ) AND TYPE = 16) AND CREATE_DATE >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND CREATE_DATE <= TO_DATE('{1}', 'YYYYMMDDHH24MISS')
)
UNION ALL(
SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, C.BRANCH_NAME, B.USER_NAME, D.NAME, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE, 287100 AS LIZING_AMOUNT, 12900 AS DISCOUNT, PRICE, 0 AS INSTALLER_FEE   FROM T_DISH_CUSTOM A
LEFT JOIN SYSTEM_YES_USER_TBL B ON B.USER_NAME = A. OPERATION_ID
LEFT JOIN SYSTEM_BRANCH_LOCATION C ON C.BRANCH_ID = B.BRANCH_ID
LEFT JOIN W_ITEM_BUNDLE D ON D.ID = A.BUNDLE_ID
WHERE BUNDLE_ID IN (SELECT ID FROM W_ITEM_BUNDLE WHERE ID IN (3321,3320,3319,3318,3317,3316 ) AND TYPE = 16) AND CREATE_DATE >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND CREATE_DATE <= TO_DATE('{1}', 'YYYYMMDDHH24MISS') AND CARD_NO NOT LIKE '100%'
)
UNION ALL(
SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, C.BRANCH_NAME, B.USER_NAME, D.NAME, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE, 191400 AS LIZING_AMOUNT, 38600 AS DISCOUNT, PRICE, 0 AS INSTALLER_FEE   FROM T_DISH_CUSTOM A
LEFT JOIN SYSTEM_YES_USER_TBL B ON B.USER_NAME = A. OPERATION_ID
LEFT JOIN SYSTEM_BRANCH_LOCATION C ON C.BRANCH_ID = B.BRANCH_ID
LEFT JOIN W_ITEM_BUNDLE D ON D.ID = A.BUNDLE_ID
WHERE BUNDLE_ID IN (SELECT ID FROM W_ITEM_BUNDLE WHERE ID IN ( 3336,3335,3334 ) AND TYPE = 16) AND CREATE_DATE >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND CREATE_DATE <= TO_DATE('{1}', 'YYYYMMDDHH24MISS') AND CARD_NO NOT LIKE '100%'
)
UNION ALL(
SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, C.BRANCH_NAME, B.USER_NAME, D.NAME, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE, 240000 AS LIZING_AMOUNT, 60000 AS DISCOUNT, PRICE , 0 AS INSTALLER_FEE  FROM T_DISH_CUSTOM A
LEFT JOIN SYSTEM_YES_USER_TBL B ON B.USER_NAME = A. OPERATION_ID
LEFT JOIN SYSTEM_BRANCH_LOCATION C ON C.BRANCH_ID = B.BRANCH_ID
LEFT JOIN W_ITEM_BUNDLE D ON D.ID = A.BUNDLE_ID
WHERE BUNDLE_ID IN (SELECT ID FROM W_ITEM_BUNDLE WHERE ID IN ( 3327,3326,3325,3324,3323,3322 ) AND TYPE = 16) AND CREATE_DATE >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND CREATE_DATE <= TO_DATE('{1}', 'YYYYMMDDHH24MISS') AND CARD_NO NOT LIKE '100%'
)

UNION ALL(
SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, C.BRANCH_NAME, B.USER_NAME, D.NAME, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE, 180000 AS LIZING_AMOUNT, 50000 AS DISCOUNT, PRICE , 0 AS INSTALLER_FEE  FROM T_DISH_CUSTOM A
LEFT JOIN SYSTEM_YES_USER_TBL B ON B.USER_NAME = A. OPERATION_ID
LEFT JOIN SYSTEM_BRANCH_LOCATION C ON C.BRANCH_ID = B.BRANCH_ID
LEFT JOIN W_ITEM_BUNDLE D ON D.ID = A.BUNDLE_ID
WHERE BUNDLE_ID IN (SELECT ID FROM W_ITEM_BUNDLE WHERE ID IN ( 3339,3338,3337) AND TYPE = 16) AND CREATE_DATE >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND CREATE_DATE <= TO_DATE('{1}', 'YYYYMMDDHH24MISS') AND CARD_NO NOT LIKE '100%'
)
UNION ALL(
SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, C.BRANCH_NAME, B.USER_NAME, D.NAME, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE, 170400 AS LIZING_AMOUNT, 109600 AS DISCOUNT, PRICE , 0 AS INSTALLER_FEE  FROM T_DISH_CUSTOM A
LEFT JOIN SYSTEM_YES_USER_TBL B ON B.USER_NAME = A. OPERATION_ID
LEFT JOIN SYSTEM_BRANCH_LOCATION C ON C.BRANCH_ID = B.BRANCH_ID
LEFT JOIN W_ITEM_BUNDLE D ON D.ID = A.BUNDLE_ID
WHERE BUNDLE_ID IN (SELECT ID FROM W_ITEM_BUNDLE WHERE ID IN (3333,3332,3331,3330,3329,3328) AND TYPE = 16) AND CREATE_DATE >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND CREATE_DATE <= TO_DATE('{1}', 'YYYYMMDDHH24MISS')AND CARD_NO NOT LIKE '100%'
)
UNION ALL(
SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, C.BRANCH_NAME, B.USER_NAME, D.NAME, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE, 142000 AS LIZING_AMOUNT, 68000 AS DISCOUNT, PRICE , 0 AS INSTALLER_FEE  FROM T_DISH_CUSTOM A
LEFT JOIN SYSTEM_YES_USER_TBL B ON B.USER_NAME = A. OPERATION_ID
LEFT JOIN SYSTEM_BRANCH_LOCATION C ON C.BRANCH_ID = B.BRANCH_ID
LEFT JOIN W_ITEM_BUNDLE D ON D.ID = A.BUNDLE_ID
WHERE BUNDLE_ID IN (SELECT ID FROM W_ITEM_BUNDLE WHERE ID IN (3340,3341,3342) AND TYPE = 16) AND CREATE_DATE >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND CREATE_DATE <= TO_DATE('{1}', 'YYYYMMDDHH24MISS') AND CARD_NO NOT LIKE '100%'
)
UNION ALL(
SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, C.BRANCH_NAME, B.USER_NAME, D.NAME, TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE,DECODE (PRICE,30000,240000,50000,287100)  AS LIZING_AMOUNT, FINANCE_DISCOUNT, PRICE , 7600 AS INSTALLER_FEE FROM T_DISH_CUSTOM A
LEFT JOIN SYSTEM_YES_USER_TBL B ON B.USER_NAME = A. OPERATION_ID
LEFT JOIN SYSTEM_BRANCH_LOCATION C ON C.BRANCH_ID = B.BRANCH_ID
LEFT JOIN W_BUNDLE D ON D.ID = A.BUNDLE_ID
WHERE A.BUNDLE_ID IN (100883,100882,100881,100880,100879,100878,100877,100876,100875,100874,100873,100872) AND A.CREATE_DATE >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND A.CREATE_DATE <= TO_DATE('{1}', 'YYYYMMDDHH24MISS') AND A.SUBSCRIBER_STATUS = 1 
) ) X
LEFT JOIN (SELECT CARD_NO ,COUNT(0) AS GEREENII_HUGATSAA FROM D_PRODUCT_PLAN WHERE PROMOTION_ID IN (159,160) GROUP BY CARD_NO) P ON P.CARD_NO = X.CARD_NO", begin, end);
            return qry;
        }

        public static string rpt_2(string begin, string end)
        {
            string qry = string.Format(@"select  CARD_NUMBER, AMOUNT, b.PRODUCT_NAME, a.STARTDATE, enddate, REGDATE,  USER_NAME, DESCR from uni_dish.account_transaction a
                                         left join PRODUCT_CATALOG b on a.PRODUCT_ID = b.PRODUCT_ID
                                         where REGDATE >= TO_DATE('{0}','yyyymmddhh24miss') and REGDATE <= TO_DATE('{1}','yyyymmddhh24miss') and amount = 0 and DESCR like 'нээлтийн%' and a.CARD_NUMBER not like '100%'", begin, end);
            return qry;
        }

        public static string rpt_3(string begin, string end)
        {
            string qry = string.Format(@" SELECT A.REVERSE_TRANS_ID ,A.TRANS_ID ,A.CARD_NO,A.BILL_NUMBER,C.PRODUCT_NAME ,D.BRANCH_NAME AS BRANCHNAME, E.CHANNEL_NAME , B.USER_NAME , F.CALL_TYPE_NAME, A.INSERTDATE AS REGDATE,
             A.BONUS_AMOUNT, A.TOTAL_POINT AS NEMEGDSEN_UPOINT, A.SPEND_POINT AS ZARTSUULSAN_UPOINT   FROM (
            SELECT * FROM (
                        SELECT A.ID, A.TRANS_ID, A.CARD_NO, A.BONUS_AMOUNT, A.TOTAL_POINT, A.SPEND_POINT, A.BILL_NUMBER, A.RESULT, A.MESSAGE, A.INSERTDATE,NULL AS REVERSE_TRANS_ID FROM UPOINT_TRANSACTION A
                        LEFT JOIN ACCOUNT_TRANSACTION B ON A.TRANS_ID = B.TRANS_ID
                        WHERE (A.INSERTDATE >= TO_DATE('{0}','yyyymmddhh24miss') AND 
                        A.INSERTDATE <= TO_DATE('{1}','yyyymmddhh24miss') AND A.RESULT = 0)
                         )
            UNION ALL
            SELECT * FROM (
                            SELECT A.ID, A.TRANS_ID, A.CARD_NO, A.BONUS_AMOUNT, A.BONUS_POINT, A.SPEND_POINT, A.BILL_NUMBER, A.RESULT, A.MESSAGE, A.INSERTDATE,A.TRANS_ID AS REVERSE_TRANS_ID FROM UPOINT_TRANSACTION A WHERE TRANS_ID IN (
                            SELECT TO_NUMBER(SUBSTR(PARAMETERS,0,LENGTH(PARAMETERS)-2)) AS TRANS_ID FROM UPOINT_LOG 
                            WHERE INSERT_DATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND INSERT_DATE <= TO_DATE('{1}','YYYYMMDDHH24MISS')  AND API_NAME = 'UPointReverse reverseTrans' AND SUBSTR(RESULT,1,3) = '000')
                         )) A
            LEFT JOIN ACCOUNT_TRANSACTION B ON A.TRANS_ID = B.TRANS_ID
            LEFT JOIN PRODUCT_CATALOG C ON C.PRODUCT_ID = B.PRODUCT_ID
            LEFT JOIN SYSTEM_BRANCH_LOCATION D ON D.BRANCH_ID = B.BRANCH
            LEFT JOIN TYPE_CHANNEL E ON E.CHANNEL_ID = B.CHANNEL_TYPE
            LEFT JOIN TYPE_CALL_TYPE F ON F.CALL_TYPE_ID = B.CALL_TYPE  
            ORDER BY INSERTDATE ASC  ", begin, end);
            return qry;
        }

        public static string rpt_4(string begin)
        {
            string qry = string.Format(@"select * from 
                    (select c.NAME, l.card_no, t.SUBSCRIBER_FNAME, a.PHONE_NO, ( NVL( l.odoo,0) + NVL(r4.zar,0) - NVL(u4.tsen,0) ) correct from 
                        (select card_no, sum(counter_amount) odoo, counter_id from D_ACCOUNT_COUNTERS where counter_id in ('1001') group by card_no, counter_id) l 
                        left join (select rr.card_no, sum(rr.CDR_USED_AMOUNT) zar from d_account_cdr rr left join ACCOUNT_TRANSACTION tt on tt.TRANS_ID = rr.CDR_TRANS_ID 
                        where (tt.REVERSE_TRANS_ID is null OR TRANS_ID IN (SELECT TRANS_ID FROM FLASH_LEASING_CDR)) and rr.CDR_USED_COUNTERS in ('1001') and substr(rr.CDR_REGDATE, 0, 8) 
                        between '{0}' and TO_CHAR(SYSDATE,'yyyymmdd') 
                        group by rr.card_no, rr.CDR_USED_COUNTERS ) r4 on l.card_no = r4.card_no 
                        left join (select card_no, sum(COUNTER_VALUE) tsen from D_ACCOUNT_RECHARGE qq 
                        left join ACCOUNT_TRANSACTION ww on ww.TRANS_ID = qq.TRANS_ID 
                        where ww.REVERSE_TRANS_ID is null and qq.COUNTER_ID in ('1001') and qq.REGDATE between '{0}' and TO_CHAR(SYSDATE,'yyyymmdd') group by qq.card_no, qq.COUNTER_ID ) u4 on l.card_no = u4.card_no 
                        left join T_DISH_CUSTOM t on t.CARD_NO = l.CARD_NO 
                        left join D_COUNTERS c on c.COUNTER_ID = l.counter_id
                        left join ADMIN_NUMBER a on a.CARD_NO = l.CARD_NO where t.SUBSCRIBER_STATUS = '1'
                    ) sub1 
                where CORRECT != '0' AND CARD_NO NOT LIKE '100%' order by 2 asc", begin);
            return qry;
        }
        public static string rpt11(string begin, string end)
        {
            string qry = string.Format(@"select installer, a.CARD_NO, a.amount, DECODE(a.amount, 500,'Илүү багц', 1000,'Үлэмж багц') amount, c.name, a.INSERT_DATE, b.CREATE_DATE from installer_promotion_tbl_new a
left join t_dish_custom b on a.CARD_NO = b.CARD_NO
left join w_item_bundle c on b.bundle_id = c.id
where a.INSERT_DATE>=to_date('{0}','yyyymmddhh24miss')
and a.INSERT_DATE<=to_date('{1}','yyyymmddhh24miss') and
b.CREATE_DATE>=to_date('20191216000000','yyyymmddhh24miss')
and b.CREATE_DATE<=to_date('20191231235959','yyyymmddhh24miss')
and a.type = 1 and a.INSTALLER = 'dd_darkhan_1' ", begin, end);
            return qry;
        }

        public static string rpt_6(string begin, string end)
        {
            string qry = string.Format(@"select installer, a.CARD_NO, a.amount, DECODE(a.amount, 500,'Илүү багц', 1000,'Үлэмж багц') Bagtsiin_ner, c.name, a.INSERT_DATE, b.CREATE_DATE from installer_promotion_tbl_new a
left join t_dish_custom b on a.CARD_NO = b.CARD_NO
left join w_item_bundle c on b.bundle_id = c.id
where a.INSERT_DATE>=to_date('{0}','yyyymmddhh24miss')
and a.INSERT_DATE<=to_date('{1}','yyyymmddhh24miss') and
b.CREATE_DATE>=to_date('20191216000000','yyyymmddhh24miss')
and b.CREATE_DATE<=to_date('20191231235959','yyyymmddhh24miss')
and a.type = 1 and a.INSTALLER = 'dd_darkhan_1'", begin, end);
            return qry;
        }

        public static string rpt_7(string begin, string end)
        {
            string qry = string.Format(@"select a.trans_id, card_number, c.PRODUCT_NAME, d.name_eng AS CONTENT_NAME, b.STARTDATE, b.ENDDATE, b.DESCR, vcontent, unitel, ddish, unitel_amount, ddish_amount, regdate  from UNINEGJ_REPORT a
left join ACCOUNT_TRANSACTION b on b.TRANS_ID  = a.TRANS_ID
left join product_catalog c on c.product_id = B.product_id
left join TV_CONTENT d on d.id = b.CONTENT_ID
where  b.REGDATE >= to_date('{0}','yyyymmddhh24miss') and b.REGDATE <= to_date('{1}','yyyymmddhh24miss')
and b.CARD_NUMBER != '8097603536532789' and b.CARD_NUMBER not like '100%' AND B.PRODUCT_ID != 45
UNION ALL
select a.trans_id, card_number, c.PRODUCT_NAME, d.CONTENT_NAME AS CONTENT_NAME, b.STARTDATE, b.ENDDATE, b.DESCR, vcontent, unitel, ddish, unitel_amount, ddish_amount, regdate  from UNINEGJ_REPORT a
left join ACCOUNT_TRANSACTION b on b.TRANS_ID  = a.TRANS_ID
left join product_catalog c on c.product_id = B.product_id
left join D_PPV_EVENT_ID_NAME d on d.id = b.CONTENT_ID
where  b.REGDATE >= to_date('{0}','yyyymmddhh24miss') and b.REGDATE <= to_date('{1}','yyyymmddhh24miss')
and b.CARD_NUMBER != '8097603536532789' and b.CARD_NUMBER not like '100%' AND B.PRODUCT_ID = 45", begin, end);
            return qry;
        }
        public static string rpt_8(string begin, string end)
        {
            string qry = string.Format(@"select q.REVERSE_TRANS_ID, l.PRODUCT_NAME, ch.CHANNEL_NAME, substr(r.CDR_REGDATE, 0, 8) as REGDATE, substr(r.CDR_REGDATE, 9, 14) as REGTIME, c.NAME as VirtualAccount,
r.CARD_NO, t.SUBSCRIBER_FNAME, q.STARTDATE, q.ENDDATE, r.CDR_BEFORE_BALANCE, r.CDR_USED_AMOUNT as AMOUNT, r.CDR_AFTER_BALANCE, ct.CALL_TYPE_NAME, B.Branch_name, q.USER_NAME,  
q.DESCR from uni_dish.D_ACCOUNT_CDR r 
left join uni_dish.T_DISH_CUSTOM t on t.CARD_NO = R.CARD_NO 
left join uni_dish.ACCOUNT_TRANSACTION q on q.TRANS_ID = r.CDR_TRANS_ID 
left join SYSTEM_BRANCH_LOCATION b on Q.BRANCH = B.Branch_id AND q.Channel_Type IN (8,9)
left join uni_dish.Type_Channel ch on q.Channel_Type = Ch.Channel_Id 
left join uni_dish.TYPE_CALL_TYPE ct on q.Call_Type = ct.call_type_id 
left join uni_dish.D_COUNTERS c on c.COUNTER_ID = R.CDR_USED_COUNTERS 
left join uni_dish.PRODUCT_CATALOG l on l.PRODUCT_ID = q.PRODUCT_ID
where  substr(r.CDR_REGDATE, 0, 8) >= '{0}' and substr(r.CDR_REGDATE, 0, 8) <= '{1}' and t.SUBSCRIBER_STATUS = '1' and r.CDR_USED_COUNTERS! = '1001' AND r.CARD_NO not in ('8097603536532789', '2130152015') AND r.CARD_NO not like '100%'", begin, end);
            return qry;
        }
        public static string rpt_9(string begin, string end)
        {
            string qry = string.Format(@"select * from (
select installer, a.CARD_NO, amount, INSERT_DATE, b.CREATE_DATE from uni_dish.installer_promotion_tbl_new a
left join uni_dish.t_dish_custom b on a.CARD_NO = b.CARD_NO
where INSERT_DATE>=to_date('{0}','yyyymmddhh24miss')
and INSERT_DATE<=to_date('{1}','yyyymmddhh24miss') and type=1
 ) sub1 order by 4 asc", begin, end);
            return qry;
        }

        public static string rpt_10(string begin, string end)
        {
            string qry = string.Format(@"SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, BRANCHNAME, CREATE_USER, CREATE_DATE, BUNDLE_NAME, TOTAL, DEPOSIT, DISCOUNT, LEASING FROM 
    (
        SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, BRANCHNAME, CREATE_USER, CREATE_DATE, BUNDLE_NAME, TOTAL, DEPOSIT, DISCOUNT, LEASING FROM 
                (
                SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, BRANCHNAME, CREATE_USER, CREATE_DATE, BUNDLE_NAME, (DEPOSIT + DISCOUNT + LEASING) AS TOTAL, DEPOSIT, DISCOUNT, LEASING  FROM 
                    (
                    SELECT A.CARD_NO, D.SUBSCRIBER_FNAME, D.SUBSCRIBER_LNAME, CERTIFICATE_NO, cast(E.BRANCH_NAME as nvarchar2(100)) AS BRANCHNAME, A.CREATE_USER, A.CREATE_DATE,  BUNDLE_NAME, BUNDLE_PRICE AS DEPOSIT, FINANCE_DISCOUNT AS DISCOUNT, (PROMOTION_DURATION * B.PROMOTION_DEVICE_PRICE) AS LEASING FROM T_DISH_CUSTOM_BRIEF A
                    LEFT JOIN W_BUNDLE_PROMOTION B ON B.BUNDLE_ID = A.BUNDLE_ID
                    LEFT JOIN W_BUNDLE C ON C.ID  = A.BUNDLE_ID
                    LEFT JOIN T_DISH_CUSTOM D ON D.SUBSCRIBER_CODE =  A.SUBCODE
                    LEFT JOIN SYSTEM_BRANCH_LOCATION E ON E.BRANCH_ID = A.BRANCH_ID
                    WHERE C.IS_PREPAID = 1 AND C.SERVICE_TYPE = 2 AND A.CARD_NO NOT LIKE '100%' AND D.SUBSCRIBER_STATUS = 1
                    )
                )
        UNION ALL
        SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, BRANCHNAME, CREATE_USER, CREATE_DATE, BUNDLE_NAME, TOTAL, DEPOSIT, DISCOUNT, LEASING FROM 
                            (
                            SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, BRANCHNAME, CREATE_USER, CREATE_DATE, BUNDLE_NAME, (DEPOSIT + DISCOUNT +  LEASING) AS TOTAL, DEPOSIT, DISCOUNT, LEASING FROM 
                                (
                                SELECT AA.CARD_NO, DD.SUBSCRIBER_FNAME, DD.SUBSCRIBER_LNAME, CERTIFICATE_NO, cast(EE.BRANCH_NAME as nvarchar2(100)) AS BRANCHNAME, BB.CREATE_USER, BB.CREATE_DATE, BB.BUNDLE_NAME, BB.BUNDLE_PRICE AS DEPOSIT, CC.BUNDLE_DISCOUNT AS DISCOUNT, LEASING FROM (
                                SELECT A.CARD_NO, COUNT(A.CARD_NO) AS COUNTV, (DEVICE_PRICE * COUNT(A.CARD_NO)) AS LEASING FROM T_DISH_CUSTOM_BRIEF A
                                LEFT JOIN D_PRODUCT_PLAN B ON B.CARD_NO = A.CARD_NO
                                WHERE BUNDLE_ID IN (3315, 3314, 3313, 3312, 3311, 3310, 3309, 3308, 3307, 3306, 3305, 3304, 3303, 3302, 3301, 3300, 3299, 3298, 3297, 3296, 3295, 3294, 3293, 3292, 3291, 3290, 3284, 3282, 3278, 3276, 3273, 3272, 3271, 3270, 3269, 3268, 3255, 3254, 3253, 3240, 3239, 3238, 3228, 3227, 3226, 3222, 3221, 3220) AND A.CARD_NO NOT LIKE '100%' GROUP BY A.CARD_NO, DEVICE_PRICE) 
                                AA 
                                LEFT JOIN T_DISH_CUSTOM_BRIEF BB ON BB.CARD_NO = AA.CARD_NO
                                LEFT JOIN W_ITEM_BUNDLE CC ON CC.ID = BB.BUNDLE_ID
                                LEFT JOIN T_DISH_CUSTOM DD ON DD.SUBSCRIBER_CODE =  BB.SUBCODE
                                LEFT JOIN SYSTEM_BRANCH_LOCATION EE ON EE.BRANCH_ID = BB.BRANCH_ID WHERE CC.TYPE = 16 AND DD.SUBSCRIBER_STATUS = 1
                                )
                            )
        UNION ALL
        SELECT CARD_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, BRANCHNAME, CREATE_USER, CREATE_DATE, BUNDLE_NAME, TOTAL, DEPOSIT, DISCOUNT, LEASING FROM 
                            (
                            SELECT A.card_no, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, cast(D.BRANCH_NAME as nvarchar2(100)) AS BRANCHNAME, A.CREATED_USER AS CREATE_USER, A.CREATE_DATE , 'ОН 2022 - ФЛАШ' AS BUNDLE_NAME, 80000 AS TOTAL, 20000 AS DEPOSIT, 0 AS DISCOUNT, 60000 AS LEASING FROM flash_leasing a
                            left join T_DISH_CUSTOM b on b.card_no = a.card_no 
                            left join SYSTEM_YES_USER_TBL C ON C.USER_NAME = A.CREATED_USER
                            LEFT JOIN ACCOUNT_TRANSACTION P ON P.TRANS_ID = A.TRANS_ID
                            LEFT JOIN SYSTEM_BRANCH_LOCATION D ON D.BRANCH_ID =  P.BRANCH
                            WHERE A.PROMOTION_ID IN( 136,173) AND b.SUBSCRIBER_STATUS = 1
                            )   
    ) WHERE CREATE_DATE  >= TO_DATE('{0}','YYYYMMDDHH24MISS')  AND CREATE_DATE  <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND CARD_NO NOT LIKE '100%'", begin, end);
            return qry;
        }

        public static string rpt_12(string begin, string end)
        {
            string qry = string.Format(@"


SELECT ALL_LEASING.CARD_NO , ALL_LEASING.FIRST_BALANCE ,ALL_LEASING.INCOME , ALL_LEASING.AMOUNT, ALL_LEASING.LAST_BALANCE ,  SUBS.SUBSCRIBER_FNAME, SUBS.SUBSCRIBER_LNAME,  SUBS.CERTIFICATE_NO ,BRANCH.BRANCH_NAME AS BRANCH_NEW,ALL_LEASING.CREATE_DATE ,ALL_LEASING.UPDATED_DATE ,ALL_LEASING.CREATE_USER , PROMO.PROMOTION_NAME AS LEASING_NAME FROM (
SELECT LEASING_ALL.* , NVL(INCOME.INCOME , 0 ) AS INCOME , NVL(FIRST_BALANCE.FIRST_BALANCE , 0) AS FIRST_BALANCE ,NVL(LAST_BALANCE.LAST_BALANCE, 0 )AS LAST_BALANCE , 
NVL(LEASING_TULULT.AMOUNT,0) AS AMOUNT  FROM (SELECT CARD_NO , TO_NUMBER(PROMOTION_ID) AS PROMOTION_ID , TRUNC(CREATE_DATE) AS CREATE_DATE , MAX(UPDATED_DATE) AS UPDATED_DATE , 
MAX(CREATE_USER) AS CREATE_USER FROM D_PRODUCT_PLAN WHERE CREATE_DATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') GROUP BY CARD_NO , PROMOTION_ID , TRUNC(CREATE_DATE)) LEASING_ALL
LEFT JOIN (SELECT CARD_NO , PROMOTION_ID , TRUNC(CREATE_DATE) AS CREATE_DATE , SUM(DEVICE_PRICE) AS INCOME FROM D_PRODUCT_PLAN WHERE CREATE_DATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND CREATE_DATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') GROUP BY CARD_NO , PROMOTION_ID , TRUNC(CREATE_DATE)) INCOME ON INCOME.CARD_NO = LEASING_ALL.CARD_NO AND INCOME.PROMOTION_ID = LEASING_ALL.PROMOTION_ID
LEFT JOIN (SELECT CARD_NO , PROMOTION_ID , TRUNC(CREATE_DATE) AS CREATE_DATE , SUM(DEVICE_PRICE) AS FIRST_BALANCE FROM D_PRODUCT_PLAN WHERE (TRANSID IS NULL OR UPDATED_DATE > TO_DATE('{0}','YYYYMMDDHH24MISS')) AND CREATE_DATE <  TO_DATE('{0}','YYYYMMDDHH24MISS') GROUP BY CARD_NO , PROMOTION_ID , TRUNC(CREATE_DATE)) FIRST_BALANCE ON FIRST_BALANCE.CARD_NO = LEASING_ALL.CARD_NO AND FIRST_BALANCE.PROMOTION_ID = LEASING_ALL.PROMOTION_ID
LEFT JOIN (SELECT CARD_NO , PROMOTION_ID , TRUNC(CREATE_DATE) AS CREATE_DATE , SUM(DEVICE_PRICE) AS LAST_BALANCE FROM D_PRODUCT_PLAN WHERE TRANSID IS NULL OR UPDATED_DATE > TO_DATE('{1}','YYYYMMDDHH24MISS') GROUP BY CARD_NO , PROMOTION_ID , TRUNC(CREATE_DATE)) LAST_BALANCE ON LAST_BALANCE.CARD_NO = LEASING_ALL.CARD_NO AND LAST_BALANCE.PROMOTION_ID = LEASING_ALL.PROMOTION_ID
LEFT JOIN (SELECT CARD_NO , PROMOTION_ID , TRUNC(CREATE_DATE) AS CREATE_DATE , SUM(DEVICE_PRICE) AS AMOUNT FROM D_PRODUCT_PLAN WHERE UPDATED_DATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND UPDATED_DATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') GROUP BY CARD_NO , PROMOTION_ID , TRUNC(CREATE_DATE)) LEASING_TULULT ON LEASING_TULULT.CARD_NO = LEASING_ALL.CARD_NO AND LEASING_TULULT.PROMOTION_ID = LEASING_ALL.PROMOTION_ID
UNION ALL
SELECT FLASHLEASING.CARD_NO ,FLASHLEASING.PROMOTION_ID, FLASHLEASING.CREATE_DATE,LAST_BALANCE.UPDATED_DATE,FLASHLEASING.CREATED_USER   , NVL(INCOME.INCOME , 0 ) AS INCOME , 
CASE WHEN INCOME.INCOME > 0 THEN 0 ELSE NVL(FIRST_BALANCE.FIRST_BALANCE , FIRST_AMOUNT) END AS FIRST_BALANCE,NVL(LAST_BALANCE.LAST_BALANCE, FIRST_AMOUNT )AS LAST_BALANCE , 
NVL(LEASING_TULULT.AMOUNT,0) AS AMOUNT  FROM (SELECT CARD_NO , PROMOTION_ID , TRUNC(CREATE_DATE)  AS CREATE_DATE ,STATS_MODE(CREATED_USER) AS CREATED_USER, SUM(AMOUNT) AS FIRST_AMOUNT FROM FLASH_LEASING WHERE CREATE_DATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') GROUP BY CARD_NO , PROMOTION_ID , TRUNC(CREATE_DATE) ) FLASHLEASING
LEFT JOIN (SELECT CARD_NO , PROMOTION_ID , SUM(AMOUNT) AS INCOME FROM FLASH_LEASING WHERE CREATE_DATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND CREATE_DATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') GROUP BY CARD_NO , PROMOTION_ID) INCOME ON INCOME.CARD_NO = FLASHLEASING.CARD_NO AND INCOME.PROMOTION_ID = FLASHLEASING.PROMOTION_ID
LEFT JOIN (SELECT CARD_NO , PROMOTION_ID , MIN(AFTER_REMAINS) AS FIRST_BALANCE FROM FLASH_LEASING_CDR WHERE CREATE_DATE <= TO_DATE('{0}','YYYYMMDDHH24MISS')  GROUP BY CARD_NO , PROMOTION_ID ) FIRST_BALANCE ON FIRST_BALANCE.CARD_NO = FLASHLEASING.CARD_NO AND FIRST_BALANCE.PROMOTION_ID = FLASHLEASING.PROMOTION_ID
LEFT JOIN (SELECT CARD_NO , PROMOTION_ID , MIN(AFTER_REMAINS) AS LAST_BALANCE , MIN(CREATE_DATE) AS UPDATED_DATE FROM FLASH_LEASING_CDR WHERE CREATE_DATE <= TO_DATE('{1}','YYYYMMDDHH24MISS')  GROUP BY CARD_NO , PROMOTION_ID ) LAST_BALANCE ON LAST_BALANCE.CARD_NO = FLASHLEASING.CARD_NO AND LAST_BALANCE.PROMOTION_ID = FLASHLEASING.PROMOTION_ID
LEFT JOIN (SELECT CARD_NO , PROMOTION_ID , SUM(AMOUNT) AS AMOUNT FROM FLASH_LEASING_CDR WHERE CREATE_DATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND CREATE_DATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') GROUP BY CARD_NO , PROMOTION_ID) LEASING_TULULT ON LEASING_TULULT.CARD_NO = FLASHLEASING.CARD_NO AND LEASING_TULULT.PROMOTION_ID = FLASHLEASING.PROMOTION_ID ) ALL_LEASING
LEFT JOIN SYSTEM_YES_USER_TBL USERS ON USERS.USER_NAME = ALL_LEASING.CREATE_USER
LEFT JOIN SYSTEM_BRANCH_LOCATION BRANCH ON BRANCH.BRANCH_ID = USERS.BRANCH_ID
LEFT JOIN (SELECT * FROM T_DISH_CUSTOM WHERE SUBSCRIBER_STATUS = 1) SUBS ON SUBS.CARD_NO = ALL_LEASING.CARD_NO
LEFT JOIN D_PROMOTION_ID PROMO ON PROMO.ID = ALL_LEASING.PROMOTION_ID
WHERE (ALL_LEASING.FIRST_BALANCE > 0 OR ALL_LEASING.INCOME > 0) AND ALL_LEASING.CARD_NO NOT LIKE '100%' AND ALL_LEASING.CARD_NO NOT IN (SELECT CARD_NO FROM TEST_CARDS) AND ALL_LEASING.CARD_NO!= '8097603536532789' ", begin, end);
            return qry;
        }

        public static string rpt_13(string begin, string end)
        {
            string qry = string.Format(@"SELECT * FROM (
SELECT CONTRACT_ID, GER_NUMBER, CONDATE, CARD_NUMBER, IS_NEWSUB, STB_NO, ADMIN_NUMBER, MAIN_PRODUCT, CUST_NAME, SSN, CUST_TYPE, BRANCH_NAME, STAFF_ID, SUBS_REG_DATE, A.POLICY_NAME, SERVICE_TYPE, IS_COMPLETE, PRICE, DEPOSIT, DRTN PROMOTION_DURATION, TTL_PYMNT, MONTHLY_PAYMENT FROM 
(
    SELECT CONTRACT_ID, GER_NUMBER, CONDATE, CARD_NO AS CARD_NUMBER, DECODE(IS_NEWSUB, 1, 'Шинэ хэрэглэгч', 0, 'Хуучин хэрэглэгч') IS_NEWSUB, STB_NO, ADMIN_NUMBER, PRODUCT_NAME_MON AS MAIN_PRODUCT, SUBSCRIBER_FNAME||' '||SUBSCRIBER_LNAME AS CUST_NAME, CERTIFICATE_NO AS SSN, POLICY_NAME, 
    DECODE(SUBSCRIBER_TYPE, 1, 'Хувь хэрэглэгч') as CUST_TYPE, BRANCH_NAME, CREATE_USER AS STAFF_ID, CDATE AS SUBS_REG_DATE, POLICY_ID FROM 
    (
        SELECT CARD_NO, STB_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, ADMIN_NUMBER, SUBSCRIBER_TYPE, PRODUCT_ID, POLICY_NAME, POLICY_ID, IS_NEWSUB, GER_NUMBER, CONTRACT_ID, CONDATE, BRANCH_ID, CREATE_USER, CDATE, CCDATE FROM 
        (
            SELECT A.CARD_NO, STB_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, PHONE_NO AS ADMIN_NUMBER, SUBSCRIBER_TYPE, PRODUCT_ID, POLICY_NAME, POLICY_ID, IS_NEWSUB, GER_NUMBER, CONTRACT_ID, CONDATE, BRANCH_ID, CREATE_USER, CDATE, CCDATE FROM (
            SELECT A.CARD_NO, PRODUCT_ID, POLICY_NAME, POLICY_ID, IS_NEWSUB, GER_NUMBER, CONTRACT_ID, CONDATE, BRANCH_ID, CREATE_USER, TO_CHAR(B.CREATE_DATE, 'YYYY-MM-DD') AS CDATE, B.CREATE_DATE AS CCDATE FROM (
            SELECT CARD_NO, PRODUCT_ID, POLICY_NAME, POLICY_ID, IS_NEWSUB, GER_NUMBER, CONTRACT_ID, TO_CHAR(CONNECTED_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CONDATE FROM POSTPAID_SUBSCRIBER
            WHERE POLICY_ID IN ( SELECT ID FROM W_BUNDLE WHERE CAT3 = 0 ) AND CARD_NO NOT LIKE '100%'
            ) A LEFT JOIN T_DISH_CUSTOM_BRIEF B ON A.CARD_NO = B.CARD_NO WHERE STATUS = 'AVAILABLE'
            ) A 
            LEFT JOIN T_DISH_CUSTOM B ON A.CARD_NO = B.CARD_NO 
            LEFT JOIN ADMIN_NUMBER C ON A.CARD_NO = C.CARD_NO WHERE SUBSCRIBER_STATUS = 1
        ) UNION ALL (
            SELECT A.CARD_NO, STB_NO, SUBSCRIBER_FNAME, SUBSCRIBER_LNAME, CERTIFICATE_NO, PHONE_NO AS ADMIN_NUMBER, SUBSCRIBER_TYPE, PRODUCT_ID, POLICY_NAME, POLICY_ID, IS_NEWSUB, GER_NUMBER, CONTRACT_ID, CONDATE, BRANCH_ID, USER_NAME AS CREATE_USER, TO_CHAR(INSERT_DATE, 'YYYY-MM-DD') AS CDATE, INSERT_DATE AS CCDATE FROM (
            --DEVICE_NOT_REQUIRED
            SELECT CARD_NO, PRODUCT_ID, POLICY_NAME, POLICY_ID, IS_NEWSUB, GER_NUMBER, CONTRACT_ID, CONDATE FROM (
            SELECT CARD_NO, PRODUCT_ID, POLICY_NAME, POLICY_ID, IS_NEWSUB, GER_NUMBER, CONTRACT_ID, TO_CHAR(CONNECTED_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CONDATE FROM POSTPAID_SUBSCRIBER
            WHERE POLICY_ID = 1 AND CARD_NO NOT LIKE '100%'
            ) UNION ALL (
            --FLASH
            SELECT CARD_NO, PRODUCT_ID, POLICY_NAME, POLICY_ID, IS_NEWSUB, GER_NUMBER, CONTRACT_ID, TO_CHAR(CONNECTED_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CONDATE FROM POSTPAID_SUBSCRIBER 
            WHERE POLICY_ID IN ( SELECT ID FROM W_BUNDLE WHERE CAT3 = 1 ) AND CARD_NO NOT LIKE '100%'
            ) ) A
            LEFT JOIN T_DISH_CUSTOM B ON A.CARD_NO = B.CARD_NO
            LEFT JOIN POSTPAID_TBL C ON A.CARD_NO = C.CARD_NO 
            LEFT JOIN ADMIN_NUMBER D ON A.CARD_NO = D.CARD_NO WHERE SUBSCRIBER_STATUS = 1
        )
    ) A
    LEFT JOIN SYSTEM_BRANCH_LOCATION B ON A.BRANCH_ID = B.BRANCH_ID
    LEFT JOIN PRODUCT_CATALOG C ON A.PRODUCT_ID = C.PRODUCT_ID
) A 
LEFT JOIN 
(
    SELECT POLICY_ID, POLICY_NAME, PRICE, DEPOSIT, TST.NAME AS SERVICE_TYPE, TIC.NAME AS IS_COMPLETE, DRTN, TTL_PYMNT, MONTHLY_PAYMENT FROM (
        SELECT POLICY_ID, POLICY_NAME, PRICE, DEPOSIT, SERVICE_TYPE, IS_COMPLETE, DRTN, TTL_PYMNT, MONTHLY_PAYMENT FROM
        (
            SELECT A.ID POLICY_ID, A.NAME POLICY_NAME, A.PRICE, A.DEPOSIT, A.SERVICE_TYPE, A.IS_COMPLETE, DPI.DRTN, DPI.TTL_PYMNT, ( A.DEPOSIT_PRICE / DPI.TTL_PYMNT ) AS MONTHLY_PAYMENT  FROM (
            SELECT ID, NAME, PRICE, DEPOSIT, DEPOSIT_PRICE, SERVICE_TYPE, IS_COMPLETE FROM (
            SELECT ID, NAME, PRICE, ( ( DEPOSIT_PERCENT / 100 ) * PRICE ) AS DEPOSIT, ( ( DEPOSIT_PERCENT / 100 ) * PRICE ) AS DEPOSIT_PRICE, SERVICE_TYPE, IS_COMPLETE FROM W_BUNDLE WHERE DEPOSIT_PERCENT != 0 AND IS_PREPAID = 2
            ) UNION ALL (
            SELECT ID, NAME, PRICE, DEPOSIT, DEPOSIT_PRICE, SERVICE_TYPE, IS_COMPLETE FROM (
            SELECT ID, NAME, PRICE, ( PRICE - DEPOSIT_PRICE ) AS DEPOSIT, DEPOSIT_PRICE, SERVICE_TYPE, IS_COMPLETE FROM (
            SELECT ID, NAME, PRICE, DEPOSIT_PRICE, SERVICE_TYPE, IS_COMPLETE FROM (
            SELECT ID, NAME, PRICE, DEPOSIT_PRICE, SERVICE_TYPE, IS_COMPLETE FROM W_BUNDLE WHERE DEPOSIT_PRICE != 0 AND IS_PREPAID = 2
            ) WHERE PRICE != DEPOSIT_PRICE )
            ) UNION ALL (
            SELECT ID, NAME, PRICE, DEPOSIT, DEPOSIT_PRICE, SERVICE_TYPE, IS_COMPLETE FROM (
            SELECT ID, NAME, PRICE, ( PRICE - DEPOSIT_PRICE ) AS DEPOSIT, DEPOSIT_PRICE, SERVICE_TYPE, IS_COMPLETE FROM W_BUNDLE WHERE PRICE = DEPOSIT_PRICE AND IS_PREPAID = 2
            ) ) ) ) A
            LEFT JOIN W_BUNDLE_PROMOTION WBP ON A.ID = WBP.BUNDLE_ID
            LEFT JOIN D_PROMOTION_ID DPI ON WBP.PROMOTION_ID = DPI.ID
        ) UNION ALL (
            SELECT ID POLICY_ID, NAME POLICY_NAME, PRICE, DEPOSIT_PRICE AS DEPOSIT, SERVICE_TYPE, IS_COMPLETE, 0 DRTN, 0 TTL_PYMNT, 0 MONTHLY_PAYMENT FROM W_BUNDLE WHERE DEPOSIT_PRICE = 0 AND DEPOSIT_PERCENT = 0 AND IS_PREPAID = 2
        )
    ) A
    LEFT JOIN TBL_SERVICE_TYPE TST ON A.SERVICE_TYPE = TST.ID
    LEFT JOIN TBL_IS_COMPLETE TIC ON A.IS_COMPLETE = TIC.ID
) B ON A.POLICY_ID = B.POLICY_ID
) WHERE TO_DATE(SUBS_REG_DATE, 'YYYY-MM-DD') >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND TO_DATE(SUBS_REG_DATE, 'YYYY-MM-DD') <= TO_DATE('{1}', 'YYYYMMDDHH24MISS')", begin, end);
            return qry;
        }

        public static string rpt_14(string begin, string end)
        {
            string qry = string.Format(@"select to_char(b.creationtime, 'yyyy-mm-dd') as Day, to_char(b.creationtime, 'hh24:mi:ss') as Time, a.amount, b.description, a.card_no, b.bankname, b.transferaccount, a.api_result, a.ger_number, c.contract_id from postpaid_payment a
left join bankstatement b on a.bank_id = b.id 
left join postpaid_subscriber c on a.ger_number = c.ger_number
left join t_dish_custom d on a.card_no = d.card_no
where INSERTED_DATE > TO_DATE('{0}','YYYYMMDDHH24MISS') AND INSERTED_DATE < TO_DATE('{1}','YYYYMMDDHH24MISS') and d.subscriber_status = '1'", begin, end);
            return qry;
        }

        public static string rpt_15(string begin, string end)
        {
            string qry = string.Format(@"select c.product_name, f.channel_name, to_char(a.regdate, 'yyyymmdd') as CDR_REGDATE, a.card_number, d.contract_id, d.ger_number, b.subscriber_fname, a.startdate, a.enddate,a.amount-A.MT_FEE AS DEDUCTED_AMOUNT,A.MT_FEE, a.amount, g.call_type_name, h.branch_name, a.descr, a.user_name, decode(d.is_status, '0', 'active', '1', 'inactive') as IS_STATUS, e.name_eng from account_transaction a
left join t_dish_custom b on a.card_number = b.card_no
left join product_catalog c on a.product_id = c.product_id
left join postpaid_subscriber d on a.card_number = d.card_no
left join tv_content e on a.content_id = e.id
left join type_channel f on a.channel_type = f.channel_id
left join type_call_type g on a.call_type = g.call_type_id
left join system_branch_location h on a.branch = h.branch_id AND A.CHANNEL_TYPE IN (8,9)
where a.regdate >= to_date('{0}','yyyymmddhh24miss') and a.regdate < to_date('{1}','yyyymmddhh24miss') and a.call_type in (13,14,15,16) and a.amount != 0 and b.subscriber_status = '1' and a.reverse_trans_id is null", begin, end);
            return qry;
        }

        public static string rpt_16(string begin)
        {
            string qry = string.Format(@"select a.card_no, d.product_name, b.contract_id, b.ger_number, c.subscriber_fname, a.amount, decode(a.is_paid, '0', 'Төлөөгүй', '1', 'Төлсөн') as IS_PAID, substr(a.invoice_month, 0, 4)||'-'||substr(a.invoice_month, 5, 2) as invoice_month from postpaid_invoice a
left join postpaid_subscriber b on a.card_no = b.card_no
left join t_dish_custom c on a.card_no = c.card_no
left join product_catalog d on b.product_id = d.product_id where a.invoice_month = '{0}' and c.subscriber_status = '1'", begin);
            return qry;
        }
        public static string rpt_17(string begin, string end)
        {
            string qry = string.Format(@"SELECT f.promotion_name, A.CARD_NO, A.BEFORE_REMAINS, A.AMOUNT, A.AFTER_REMAINS, A.CREATE_DATE, B.USER_NAME as TULULT_XIISEN_AJILTAN, C.PRODUCT_NAME, B.STARTDATE, B.ENDDATE, D.BRANCH_NAME AS TULULT_XIISEN_SALBAR, e.created_user, DECODE(TYPE, 1, 'VIRTUAL', 2, 'CASH') AS TULBUR_TURUL,A.TRANS_ID,B.DESCR   FROM FLASH_LEASING_CDR A
LEFT JOIN ACCOUNT_TRANSACTION B ON B.TRANS_ID = A.TRANS_ID
LEFT JOIN PRODUCT_CATALOG C ON C.PRODUCT_ID = B.PRODUCT_ID
LEFT JOIN SYSTEM_BRANCH_LOCATION D ON D.BRANCH_ID = B.BRANCH AND B.CHANNEL_TYPE IN (8,9)
LEFT JOIN FLASH_LEASING E ON e.CARD_NO = a.card_no
LEFT JOIN D_PROMOTION_ID F ON F.ID = e.promotion_id
WHERE A.CARD_NO NOT LIKE '100%' AND A.CREATE_DATE>=TO_DATE('{0}','YYYYMMDDHH24MISS') AND  A.CREATE_DATE<=TO_DATE('{1}','YYYYMMDDHH24MISS')
UNION ALL 
SELECT f.promotion_name, A.CARD_NO, K.CDR_BEFORE_BALANCE, B.AMOUNT, K.CDR_AFTER_BALANCE, A.CREATE_DATE, B.USER_NAME as TULULT_XIISEN_AJILTAN, C.PRODUCT_NAME, B.STARTDATE, B.ENDDATE, D.BRANCH_NAME AS TULULT_XIISEN_SALBAR, e.created_user,  'VIRTUAL' AS TULBUR_TURUL,A.TRANS_ID,B.DESCR FROM flash_leasing_2020vod_cdr A
LEFT JOIN ACCOUNT_TRANSACTION B ON B.TRANS_ID = A.TRANS_ID
LEFT JOIN D_ACCOUNT_CDR K ON K.CDR_TRANS_ID = A.TRANS_ID
LEFT JOIN PRODUCT_CATALOG C ON C.PRODUCT_ID = B.PRODUCT_ID
LEFT JOIN SYSTEM_BRANCH_LOCATION D ON D.BRANCH_ID = B.BRANCH
LEFT JOIN FLASH_LEASING E ON e.CARD_NO = a.card_no
LEFT JOIN D_PROMOTION_ID F ON F.ID = e.promotion_id
WHERE A.CARD_NO NOT LIKE '100%' AND A.CREATE_DATE>=TO_DATE('{0}','YYYYMMDDHH24MISS') AND  A.CREATE_DATE<=TO_DATE('{1}','YYYYMMDDHH24MISS') AND A.TRANS_ID NOT IN (SELECT TRANS_ID FROM FLASH_LEASING_CDR)", begin, end);
            return qry;
        }
        public static string rpt_18(string begin, string end)
        {
            string qry = string.Format(@"SELECT * FROM ( 
                            SELECT FROM_TXN_USER_NAME, BUNDLE_ID, BUNDLE_NAME, UNIT_PRICE, QTY, TTL_PRICE FROM ( SELECT FROM_TXN_USER_NAME, UNIT_PRICE, BUNDLE_ID, BUNDLE_NAME, SUM(QUANTITY) AS QTY, SUM(PRICE) AS TTL_PRICE FROM ( 
                                SELECT FROM_TXN_USER_NAME, BUNDLE_ID, BUNDLE_NAME, PRICE / QUANTITY AS UNIT_PRICE, QUANTITY, PRICE FROM W_BARAA_TXN 
                                WHERE TXN_DTL_TYPE IN ( 4, 7 ) AND FROM_BRANCH_TYPE = 16 AND INSERT_DATE >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND INSERT_DATE <= TO_DATE('{1}', 'YYYYMMDDHH24MISS') AND REVERSE_ID IS NULL ) 
                                GROUP BY FROM_TXN_USER_NAME, BUNDLE_ID, BUNDLE_NAME, UNIT_PRICE ) 
                                UNION ALL 
                                ( 
                                SELECT FROM_TXN_USER_NAME, BUNDLE_ID, BUNDLE_NAME, UNIT_PRICE, SUM(QUANTITY) AS QTY, SUM(PRICE) AS TTL_PRICE FROM ( 
                                    SELECT FROM_TXN_USER_NAME, W_BARAA_TXN_DTL.ITEM_CODE AS BUNDLE_ID, ITEM_NAME AS BUNDLE_NAME, ( W_BARAA_TXN.PRICE / W_BARAA_TXN.QUANTITY ) UNIT_PRICE, W_BARAA_TXN.QUANTITY, W_BARAA_TXN.PRICE FROM W_BARAA_TXN_DTL 
                                    LEFT JOIN W_BARAA_TXN ON W_BARAA_TXN_DTL.W_BARAA_TXN_ID = W_BARAA_TXN.ID 
                                    LEFT JOIN W_ITEM ON W_BARAA_TXN_DTL.ITEM_CODE = W_ITEM.ITEM_CODE 
                        WHERE W_BARAA_TXN.TXN_DTL_TYPE = 6 AND FROM_BRANCH_TYPE = 16 AND W_BARAA_TXN.INSERT_DATE >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND W_BARAA_TXN.INSERT_DATE <= TO_DATE('{1}', 'YYYYMMDDHH24MISS') AND REVERSE_ID IS NULL ) 
                        GROUP BY FROM_TXN_USER_NAME, BUNDLE_ID, BUNDLE_NAME, UNIT_PRICE )) ORDER BY FROM_TXN_USER_NAME ASC", begin, end);
            return qry;
        }
        public static string rpt_19(string begin, string end)
        {
            string qry = string.Format(@"SELECT X.CARD_NO, Z.PRODUCT_NAME, TO_CHAR(X.COMPLETED_DATE, 'YYYY-MM-DD') AS REGDATE, BANKNAME, X.AMOUNT, PHONE_NO, INVOICE_NO,
                        DECODE(REQUEST_TYPE, 1001, 'Bagts sungalt', 1004, 'Dans tsenegleed - NVOD uzsen', 1007, 'Dans tseneglelt', 1010, 'Dans tseneglelt', 1013, 'Bagts ahiulalt', 1017, 'Dans tseneglelt') AS REQUEST_TYPE
                        FROM APP_MERCHANT_PENDING_TRANSACTIONS X
                        LEFT JOIN PRODUCT_CATALOG Z ON Z.PRODUCT_ID = X.PRODUCT_ID
                        WHERE STATUS = 'C' AND COMPLETED_DATE >= TO_DATE('{0}', 'YYYYMMDDHH24MISS') AND COMPLETED_DATE <= TO_DATE('{1}', 'YYYYMMDDHH24MISS')
                        ORDER BY COMPLETED_DATE", begin, end);
            return qry;
        }
        public static string rpt_20(string begin, string end)
        {
            string qry = string.Format(@"SELECT A.TRANS_ID, DECODE(A.CHANNEL_TYPE, 9, 'Салбар', 11, 'Суурьлуулагч', 3, 'Мобайл диллер', 13, 'Агент') AS SOURCE, A.CARD_NO, B.BRANCH_NAME, A.USER_NAME, TO_NUMBER(A.AMOUNT)  AS AMOUNT , A.MONTH, A.INSERT_DATE AS REGDATE, NUKHTSUL, T.PRODUCT_NAME,C.DESCR 
                                            FROM UPSELL_EMP A
                                            LEFT JOIN SYSTEM_BRANCH_LOCATION B ON A.BRANCH_ID = B.BRANCH_ID
                                            LEFT JOIN ACCOUNT_TRANSACTION C ON A.TRANS_ID = C.TRANS_ID 
                                            LEFT JOIN PRODUCT_CATALOG T ON T.PRODUCT_ID = C.PRODUCT_ID
                                            WHERE A.REVERSE_TRANS_ID IS NULL
                                            AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND REGDATE > TO_DATE('{0}','YYYYMMDDHH24MISS') AND SUBSTR(CARD_NO,1,1)!= 1 AND (B.BRANCH_NAME!='IT TEST BRANCH' OR B.BRANCH_NAME IS NULL)
                                            ORDER BY REGDATE ASC", begin, end);
            return qry;
        }
        public static string rpt_21(string begin, string end)
        {
            string qry = string.Format(@"SELECT CREATE_USER AS INSTALLER,
                NVL(COUNT(CASE WHEN PURCHASE_TYPE = 'CASH' THEN 1 END),0) AS CASH ,
                NVL(COUNT(CASE WHEN PURCHASE_TYPE = 'Telesales' THEN 1 END),0) AS TELESALES ,
                NVL(SUM(CASE WHEN PURCHASE_TYPE IN ('Үйлчилгээний хөлс (А бүс)') THEN AMOUNT/15000 WHEN PURCHASE_TYPE = 'Үйлчилгээний хөлс (Б бүс)' THEN AMOUNT/20000 END) - COUNT(CASE WHEN PURCHASE_TYPE = 'CASH' THEN 1 END ) -COUNT(CASE WHEN PURCHASE_TYPE = 'Baingiin leasing' THEN 1 END),0) AS SERVICE  ,
                NVL(SUM(CASE WHEN PURCHASE_TYPE = 'Үйлчилгээний хөлс (Салаалах)' THEN AMOUNT/8000 END),0) AS SALAALAH ,
                NVL(SUM(CASE WHEN PURCHASE_TYPE = 'Үйлчилгээний хөлс (Б бүс)' THEN AMOUNT/20000 END),0) AS B_BUS ,
                NVL(COUNT(CASE WHEN PURCHASE_TYPE = 'TCA' THEN 1 END),0) AS TCA , 
                NVL(COUNT(CASE WHEN PURCHASE_TYPE = 'Baingiin leasing' THEN 1 END),0) AS BAINGIIN_LEASING 
                FROM ( SELECT * FROM (
                SELECT CARD_NO, BUNDLE_PRICE , CREATE_USER ,TRANS_GROUP_ID ,CREATE_DATE ,BUNDLE_NAME, CASE 
                WHEN BUNDLE_ID IN (SELECT BUNDLE_ID FROM W_BUNDLE_PROMOTION WHERE PROMOTION_ID IN (SELECT ID FROM UNI_DISH.D_PROMOTION_ID WHERE GROUP_ID = '63')) THEN 'Telesales'
                WHEN BUNDLE_ID IN (SELECT BUNDLE_ID FROM UNI_DISH.W_BUNDLE_PROMOTION WHERE PROMOTION_ID IN (SELECT ID FROM UNI_DISH.D_PROMOTION_ID WHERE GROUP_ID = '56')) THEN 'TCA'
                WHEN BUNDLE_PRICE IN (230000,300000) AND BUNDLE_ID IN (SELECT ID FROM W_BUNDLE WHERE SERVICE_TYPE = 1) THEN 'CASH' END AS PURCHASE_TYPE , 0 AS AMOUNT
                FROM T_DISH_CUSTOM_BRIEF 
                WHERE CREATE_DATE > TO_DATE('{0}','YYYYMMDDHH24MISS') AND CREATE_DATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND STATUS='AVAILABLE' AND 
                CREATE_USER  IN (SELECT SYSTEM_NAME FROM MPP_TABLET_USERS WHERE SUBSTR(BRANCH_ID,1,2) = '20') ) WHERE  PURCHASE_TYPE IS NOT NULL
                UNION ALL
                SELECT CARD_NUMBER , AMOUNT , USER_NAME ,TRANS_ID , REGDATE ,DESCR ,DESCR AS PURCHASE_TYPE , AMOUNT
                FROM ACCOUNT_TRANSACTION WHERE CALL_TYPE = '42' AND REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND TRANS_ID NOT IN (SELECT INSTALLER_PAY_ID FROM UNI_DISH.TELESALES_ACQ_LEASING) AND USER_NAME  IN (SELECT SYSTEM_NAME FROM MPP_TABLET_USERS WHERE SUBSTR(BRANCH_ID,1,2) = '20')
                UNION ALL
                SELECT CARD_NO , BUNDLE_PRICE, CREATE_USER ,TRANS_GROUP_ID , CREATE_DATE ,NULL AS DESCR , 'Baingiin leasing' AS PURCHASE_TYPE , BUNDLE_PRICE FROM t_dish_custom_brief 
                WHERE  CREATE_DATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND CREATE_DATE  <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND STATUS = 'AVAILABLE' AND
                CREATE_USER IN (SELECT USER_NAME FROM SYSTEM_YES_USER_TBL WHERE USER_TYPE = 16 ) AND BUNDLE_ID IN (SELECT ID FROM W_BUNDLE WHERE NAME LIKE '%байнгын%' ) 
                UNION ALL 

                SELECT CARD_NO, AMOUNT,INSTALLER ,TRANS_ID , INSERT_DATE,'Payment' AS PURCHASE_TYPE ,'Payment' AS TYPE2 , 0 AS AMOUNT_ZERO FROM UNI_DISH.INSTALLER_PROMOTION_TBL_NEW A
                WHERE TYPE=1 AND INSTALLER!= 'dd_darkhan_1' AND INSERT_DATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND INSERT_DATE <= TO_DATE('{1}','YYYYMMDDHH24MISS')) WHERE ( SUBSTR(CARD_NO,1,1) != '1' OR CARD_NO IS NULL)
                GROUP BY CREATE_USER", begin, end);
            return qry;
        }
        public static string rpt_22(string begin, string end)
        {
            string qry = string.Format(@"SELECT * FROM ((SELECT DISTINCT(AA.TRANS_ID), AA.REVERSE_TRANS_ID AS ESREG_GUILGEE, HH.PRODUCT_NAME AS BAGTS, GG.CHANNEL_NAME AS SUWAG, AA.REGDATE AS SUNGASN_UDUR, AA.CARD_NUMBER AS CARD, BB.SUBSCRIBER_FNAME AS NER, DECODE(BB.SUBSCRIBER_STATUS, 0,'INACTIVE', 1,'ACTIVE', 'UNKNOWN') STATUS, SS.SUBTYPE_NAME AS TURUL, AA.STARTDATE AS EXLEX_XUGATSAA, AA.ENDDATE AS DUUSAX_XUGATSAA, AA.AMOUNT AS TOTAL_DUN, MT_FEE,AA.AMOUNT - MT_FEE AS MUNGUN_DUN , DD.BRANCH_NAME AS SALBAR, AA.USER_NAME AS SUNGALT_AJILTAN, AA.DESCR AS TAILBAR, BB.OPERATION_ID AS UUSGESEN_AJILTAN , AA.TOTAL_POINT AS UP_NEMEGDSEN, AA.SPEND_POINT AS UP_HASAGDSAN FROM (
        SELECT ORGACC.*,P.TOTAL_POINT,P.SPEND_POINT FROM (
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND PRODUCT_ID IN  (SELECT PRODUCT_ID FROM PRODUCT_CATALOG WHERE ISREPORT =1) AND AMOUNT !=0 AND CARD_NUMBER NOT IN ('8097603536532789', '2130152015', '2130139200') AND SUBSTR(CARD_NUMBER, 0,3) !='100' AND CALL_TYPE NOT IN (101,5,40)
        UNION ALL
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND PRODUCT_ID IS NULL  AND AMOUNT !=0 AND CARD_NUMBER NOT IN ('8097603536532789', '2130152015', '2130139200') AND SUBSTR(CARD_NUMBER, 0,3) !='100' AND CALL_TYPE=41
        UNION
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND DESCR LIKE '%FLASH%'
) ORGACC 
LEFT JOIN UPOINT_TRANSACTION P ON P.TRANS_ID = ORGACC.TRANS_ID
WHERE ORGACC.TRANS_ID NOT IN (SELECT TO_NUMBER(CDR_TRANS_ID) FROM D_ACCOUNT_CDR WHERE CDR_REGDATE >='{0}'  AND CDR_REGDATE <='{1}' AND CDR_TRANS_ID IS NOT NULL) AND RESULT = 0
) AA
LEFT JOIN T_DISH_CUSTOM BB ON AA.CARD_NUMBER = BB.CARD_NO
LEFT JOIN SYSTEM_BRANCH_LOCATION DD ON AA.BRANCH = DD.BRANCH_ID AND AA.CHANNEL_TYPE IN (9,8)
LEFT JOIN TYPE_CHANNEL GG ON AA.CHANNEL_TYPE = GG.CHANNEL_ID
LEFT JOIN PRODUCT_CATALOG HH ON AA.PRODUCT_ID = HH.PRODUCT_ID
LEFT JOIN T_DISH_SUBSCRIBERTYPE SS ON BB.SUBSCRIBER_TYPE = SS.SUBTYPE_ID)
UNION ALL
(SELECT DISTINCT(AA.TRANS_ID), AA.REVERSE_TRANS_ID AS ESREG_GUILGEE, HH.PRODUCT_NAME AS BAGTS, GG.CHANNEL_NAME AS SUWAG, AA.REGDATE AS SUNGASN_UDUR, AA.CARD_NUMBER AS CARD, BB.SUBSCRIBER_FNAME AS NER, DECODE(BB.SUBSCRIBER_STATUS, 0,'INACTIVE', 1,'ACTIVE', 'UNKNOWN') STATUS, SS.SUBTYPE_NAME AS TURUL, AA.STARTDATE AS EXLEX_XUGATSAA, AA.ENDDATE AS DUUSAX_XUGATSAA, AA.AMOUNT AS TOTAL_DUN, MT_FEE,AA.AMOUNT - MT_FEE AS MUNGUN_DUN, DD.BRANCH_NAME AS SALBAR, AA.USER_NAME AS SUNGALT_AJILTAN, AA.DESCR AS TAILBAR, BB.OPERATION_ID AS UUSGESEN_AJILTAN , AA.TOTAL_POINT AS UP_NEMEGDSEN, AA.SPEND_POINT AS UP_HASAGDSAN FROM (
        SELECT ORGACC.*,P.TOTAL_POINT,P.SPEND_POINT FROM (
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND PRODUCT_ID IN  (SELECT PRODUCT_ID FROM PRODUCT_CATALOG WHERE ISREPORT =1) AND AMOUNT !=0 AND CARD_NUMBER NOT IN ('8097603536532789', '2130152015', '2130139200') AND SUBSTR(CARD_NUMBER, 0,3) !='100' AND CALL_TYPE NOT IN (101,5,40)
        UNION ALL
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND PRODUCT_ID IS NULL  AND AMOUNT !=0 AND CARD_NUMBER NOT IN ('8097603536532789', '2130152015', '2130139200') AND SUBSTR(CARD_NUMBER, 0,3) !='100' AND CALL_TYPE=41
        UNION
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND DESCR LIKE '%FLASH%'
) ORGACC 
LEFT JOIN UPOINT_TRANSACTION P ON P.TRANS_ID = ORGACC.TRANS_ID
WHERE ORGACC.TRANS_ID NOT IN (SELECT TO_NUMBER(CDR_TRANS_ID) FROM D_ACCOUNT_CDR WHERE CDR_REGDATE >='{0}'  AND CDR_REGDATE <='{1}' AND CDR_TRANS_ID IS NOT NULL) AND ORGACC.TRANS_ID NOT IN (SELECT TRANS_ID FROM UPOINT_TRANSACTION)
) AA
LEFT JOIN T_DISH_CUSTOM BB ON AA.CARD_NUMBER = BB.CARD_NO
LEFT JOIN SYSTEM_BRANCH_LOCATION DD ON AA.BRANCH = DD.BRANCH_ID AND AA.CHANNEL_TYPE IN (9,8)
LEFT JOIN TYPE_CHANNEL GG ON AA.CHANNEL_TYPE = GG.CHANNEL_ID
LEFT JOIN PRODUCT_CATALOG HH ON AA.PRODUCT_ID = HH.PRODUCT_ID
LEFT JOIN T_DISH_SUBSCRIBERTYPE SS ON BB.SUBSCRIBER_TYPE = SS.SUBTYPE_ID) 
UNION ALL
(SELECT DISTINCT(AA.TRANS_ID), AA.REVERSE_TRANS_ID AS ESREG_GUILGEE, HH.PRODUCT_NAME AS BAGTS, GG.CHANNEL_NAME AS SUWAG, AA.REGDATE AS SUNGASN_UDUR, AA.CARD_NUMBER AS CARD, BB.SUBSCRIBER_FNAME AS NER, DECODE(BB.SUBSCRIBER_STATUS, 0,'INACTIVE', 1,'ACTIVE', 'UNKNOWN') STATUS, SS.SUBTYPE_NAME AS TURUL, AA.STARTDATE AS EXLEX_XUGATSAA, AA.ENDDATE AS DUUSAX_XUGATSAA,AA.AMOUNT AS TOTAL_DUN, MT_FEE,AA.AMOUNT - MT_FEE AS MUNGUN_DUN, DD.BRANCH_NAME AS SALBAR, AA.USER_NAME AS SUNGALT_AJILTAN, AA.DESCR AS TAILBAR, BB.OPERATION_ID AS UUSGESEN_AJILTAN , AA.TOTAL_POINT AS UP_NEMEGDSEN, AA.SPEND_POINT AS UP_HASAGDSAN FROM (
        SELECT ORGACC.*,P.TOTAL_POINT,P.SPEND_POINT FROM (
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND PRODUCT_ID IN  (SELECT PRODUCT_ID FROM PRODUCT_CATALOG WHERE ISREPORT =1) AND AMOUNT !=0 AND CARD_NUMBER NOT IN ('8097603536532789', '2130152015', '2130139200') AND SUBSTR(CARD_NUMBER, 0,3) !='100' AND CALL_TYPE NOT IN (101,5,40)
        UNION ALL
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND PRODUCT_ID IS NULL  AND AMOUNT !=0 AND CARD_NUMBER NOT IN ('8097603536532789', '2130152015', '2130139200') AND SUBSTR(CARD_NUMBER, 0,3) !='100' AND CALL_TYPE=41
        UNION
        SELECT * FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND DESCR LIKE '%FLASH%'
) ORGACC 
LEFT JOIN UPOINT_TRANSACTION P ON P.TRANS_ID = ORGACC.TRANS_ID
WHERE ORGACC.TRANS_ID NOT IN (SELECT TO_NUMBER(CDR_TRANS_ID) FROM D_ACCOUNT_CDR WHERE CDR_REGDATE >='{0}'  AND CDR_REGDATE <='{1}' AND CDR_TRANS_ID IS NOT NULL) AND ORGACC.TRANS_ID IN (SELECT DISTINCT(TRANS_ID) FROM UPOINT_TRANSACTION WHERE  RESULT != 0)
) AA
LEFT JOIN T_DISH_CUSTOM BB ON AA.CARD_NUMBER = BB.CARD_NO
LEFT JOIN SYSTEM_BRANCH_LOCATION DD ON AA.BRANCH = DD.BRANCH_ID AND AA.CHANNEL_TYPE IN (9,8)
LEFT JOIN TYPE_CHANNEL GG ON AA.CHANNEL_TYPE = GG.CHANNEL_ID
LEFT JOIN PRODUCT_CATALOG HH ON AA.PRODUCT_ID = HH.PRODUCT_ID
LEFT JOIN T_DISH_SUBSCRIBERTYPE SS ON BB.SUBSCRIBER_TYPE = SS.SUBTYPE_ID)) 
WHERE TRANS_ID IN (SELECT TRANS_ID FROM ACCOUNT_TRANSACTION WHERE REGDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND REGDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND PROMOTION_ID = 161) ", begin, end);
            return qry;
        }
        public static string rpt_23(string begin, string end)
        {
            string qry = string.Format(@"select * from (
            SELECT X.TRANS_ID , X.PAYMENT_DATE , X.CARD_NO , Z.CHANNEL_NAME , DECODE(X.IS_MONTH , 1 , 'Сараар' , 2 ,'Хоногоор') AS TOPUP_TYPE , X.STARTDATE , X.ENDDATE ,X.MTFEE, T.PRODUCT_NAME , SUBSCRIBER_FNAME ,L.TYPE_NAME AS USER_TYPE, H.TRANS_ID AS ReVERSE_TRANS_ID , H.REGDATE AS REVERSE_DATE 
            FROM (SELECT * FROM MT_FEE_EXTRACTED 
            WHERE CARD_NO NOT LIKE '100%' AND STARTDATE >= TO_DATE('{0}','YYYYMMDDHH24MISS') AND STARTDATE <= TO_DATE('{1}','YYYYMMDDHH24MISS') AND CARD_NO!= '8097603536532789') X
            LEFT JOIN ACCOUNT_TRANSACTION Y ON Y.TRANS_ID = X.TRANS_ID
            LEFT JOIN ACCOUNT_TRANSACTION H ON H.TRANS_ID = Y.REVERSE_TRANS_ID
            LEFT JOIN TYPE_CHANNEL Z ON Z.CHANNEL_ID = X.CHANNEL_ID
            LEFT JOIN PRODUCT_CATALOG T ON T.PRODUCT_ID = X.PRODUCT_ID
            LEFT JOIN (SELECT * FROM T_DISH_CUSTOM WHERE SUBSCRIBER_STATUS = 1 ) K ON K.CARD_NO = X.CARD_NO
            LEFT JOIN T_DISH_CUSTOM_TYPE L ON L. TYPE_ID = K.SUBSCRIBER_TYPE
             ) sub1 order by 2 asc", begin, end);
            return qry;
        }
        public static string login(string username)
        {
            string qry = string.Format(@"select USER_ID, USER_FIRST_NAME ,USER_LAST_NAME, USER_PASSWORD, USER_EMAIL, USER_PHONE , DIVISION from DREPORT_LOGIN where USER_PHONE='{0}'", username);
            return qry;
        }
        public static string version_checker()
        {
            string qry = string.Format(@"SELECT APP_VERSION FROM (SELECT * FROM DREPORT_VERSION ORDER BY REGDATE DESC) WHERE rownum = 1");
            return qry;
        }
        public static string permission_reports(string division)
        {
            string qry = string.Format(@"SELECT REPORTS FROM dreport_permission WHERE DIVISION = '{0}' AND IS_ACTIVE = 1" , division);
            return qry;
        }

    }
    public class Solution
    {
        public bool IsPalindrome(int x)
        {
            int y = x.ToString().Length;
            for (int i = 0; i < y; i++)
            {

            }
            return true;
        }
    }
}